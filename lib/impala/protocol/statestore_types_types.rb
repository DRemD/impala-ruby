#
# Autogenerated by Thrift Compiler (0.8.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'types_types'


module Impala
  module Protocol
    class TVersionedObject
      include ::Thrift::Struct, ::Thrift::Struct_Union
      SERVICE_ID = 1
      KEY = 2
      TYPE = 3
      VERSION = 4
      VALUE = 5

      FIELDS = {
      SERVICE_ID => { :type => ::Thrift::Types::STRING, :name => 'service_id' },
      KEY => { :type => ::Thrift::Types::STRING, :name => 'key' },
      TYPE => { :type => ::Thrift::Types::STRING, :name => 'type' },
      VERSION => { :type => ::Thrift::Types::I64, :name => 'version' },
      VALUE => { :type => ::Thrift::Types::STRING, :name => 'value', :binary => true }
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class TServiceInstance
      include ::Thrift::Struct, ::Thrift::Struct_Union
      SUBSCRIBER_ID = 1
      HOST_PORT = 2

      FIELDS = {
      SUBSCRIBER_ID => { :type => ::Thrift::Types::I32, :name => 'subscriber_id' },
      HOST_PORT => { :type => ::Thrift::Types::STRUCT, :name => 'host_port', :class => Impala::Protocol::THostPort }
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field subscriber_id is unset!') unless @subscriber_id
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field host_port is unset!') unless @host_port
      end

      ::Thrift::Struct.generate_accessors self
    end

    class TServiceMembership
      include ::Thrift::Struct, ::Thrift::Struct_Union
      SERVICE_ID = 1
      SERVICE_INSTANCES = 2

      FIELDS = {
      SERVICE_ID => { :type => ::Thrift::Types::STRING, :name => 'service_id' },
      SERVICE_INSTANCES => { :type => ::Thrift::Types::LIST, :name => 'service_instances', :element => { :type => ::Thrift::Types::STRUCT, :class => Impala::Protocol::TServiceInstance } }
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field service_id is unset!') unless @service_id
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field service_instances is unset!') unless @service_instances
      end

      ::Thrift::Struct.generate_accessors self
    end

  end
end
