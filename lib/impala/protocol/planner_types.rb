#
# Autogenerated by Thrift Compiler (0.8.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'types_types'
require 'exprs_types'
require 'data_sinks_types'
require 'plan_nodes_types'
require 'partitions_types'


module Impala
  module Protocol
    class TPlanFragment
      include ::Thrift::Struct, ::Thrift::Struct_Union
      PLAN = 2
      OUTPUT_EXPRS = 4
      OUTPUT_SINK = 5
      PARTITION = 6

      FIELDS = {
      PLAN => { :type => ::Thrift::Types::STRUCT, :name => 'plan', :class => Impala::Protocol::TPlan, :optional => true },
      OUTPUT_EXPRS => { :type => ::Thrift::Types::LIST, :name => 'output_exprs', :element => { :type => ::Thrift::Types::STRUCT, :class => Impala::Protocol::TExpr }, :optional => true },
      OUTPUT_SINK => { :type => ::Thrift::Types::STRUCT, :name => 'output_sink', :class => Impala::Protocol::TDataSink, :optional => true },
      PARTITION => { :type => ::Thrift::Types::STRUCT, :name => 'partition', :class => Impala::Protocol::TDataPartition }
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field partition is unset!') unless @partition
      end

      ::Thrift::Struct.generate_accessors self
    end

    class TScanRangeLocation
      include ::Thrift::Struct, ::Thrift::Struct_Union
      SERVER = 1
      VOLUME_ID = 2

      FIELDS = {
      SERVER => { :type => ::Thrift::Types::STRUCT, :name => 'server', :class => Impala::Protocol::THostPort },
      VOLUME_ID => { :type => ::Thrift::Types::I32, :name => 'volume_id', :default => -1, :optional => true }
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field server is unset!') unless @server
      end

      ::Thrift::Struct.generate_accessors self
    end

    class TScanRangeLocations
      include ::Thrift::Struct, ::Thrift::Struct_Union
      SCAN_RANGE = 1
      LOCATIONS = 2

      FIELDS = {
      SCAN_RANGE => { :type => ::Thrift::Types::STRUCT, :name => 'scan_range', :class => Impala::Protocol::TScanRange },
      LOCATIONS => { :type => ::Thrift::Types::LIST, :name => 'locations', :element => { :type => ::Thrift::Types::STRUCT, :class => Impala::Protocol::TScanRangeLocation } }
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field scan_range is unset!') unless @scan_range
      end

      ::Thrift::Struct.generate_accessors self
    end

  end
end
